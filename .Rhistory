axis.text.x = element_text(size = 10),
axis.text.y = element_text(size = 10)
) +
annotate("text", x = 24, y = -0.4, label = "Prepared by Sam Messer", size = 10)
ggplot(utility, aes(x=c)) +
geom_line(aes(y=sigma1_5)) +
geom_line(aes(y=sigma2)) +
geom_line(aes(y=sigma5)) +
geom_line(aes(y=sigma10)) +
geom_line(aes(y=sigma30)) +
geom_line(aes(y=log)) +
ylim(-0.5, 3.5) + xlim(0, 27) +
xlab("Consumption") + ylab("Utility") +
ggtitle(expression(paste("Utility Functions for varying levels of ", sigma))) +
annotate("label", x = 26.5, y = 1.6, label = sigma1_5label, parse = T, size = 15) +
annotate("label", x = 26.5, y = 0.96, label = sigma2label, parse = T, size = 15) +
annotate("label", x = 26.5, y = 0.35, label = sigma5label, parse = T, size = 15) +
annotate("label", x = 26.5, y = 0.11111111, label = sigma10label, parse = T, size = 15) +
annotate("label", x = 26.5, y = -0.15448276, label = sigma30label, parse = T, size = 15) +
annotate("label", x = 26.5, y = 3.219, label = loglabel, parse = T, size = 15) +
theme(
plot.title = element_text(face = "bold", size = 40, hjust = 0.5),
axis.title.x = element_text(size = 30),
axis.title.y = element_text(size = 30),
axis.text.x = element_text(size = 10),
axis.text.y = element_text(size = 10)
) +
annotate("text", x = 24, y = -0.4, label = "Prepared by Sam Messer", size = 10)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
library(shiny)
runApp('C:/Users/Sam/Desktop/test_script')
runApp('C:/Users/Sam/Desktop/test_script')
?rnorm
runApp('C:/Users/Sam/Desktop/test_script')
runApp('C:/Users/Sam/Desktop/test_script')
runApp('C:/Users/Sam/Desktop/test_script')
?sliderInput
runApp('C:/Users/Sam/Desktop/test_script')
runApp('C:/Users/Sam/Desktop/Law-of-Large-Number-master/Law-of-Large-Number-master')
install.packages("shinydashboard")
install.packages("plotrix")
install.packages("shinythemes")
install.packages("reshape2")
install.packages("scales")
install.packages("stats")
install.packages("stats")
install.packages("stats")
install.packages("Rlab")
install.packages("formattable")
install.packages("discrimARTs")
install.packages("truncnorm")
shiny::runApp('C:/Users/Sam/Desktop/Law-of-Large-Number-master/Law-of-Large-Number-master')
install.packages("truncnorm")
install.packages("installr")
version
install.packages("truncnorm")
shiny::runApp('C:/Users/Sam/Desktop/Bayes_Thm')
install.packages("shinyDND")
runApp('C:/Users/Sam/Desktop/Bayes_Thm')
runApp('C:/Users/Sam/Desktop/Bayes_Thm')
runApp('C:/Users/Sam/Desktop/Bayes_Thm')
runApp('C:/Users/Sam/Desktop/Bayes_Thm')
runApp('C:/Users/Sam/Desktop/Bayes_Thm')
runApp('C:/Users/Sam/Desktop/Bayes_Thm')
runApp('C:/Users/Sam/Desktop/Bayes_Thm')
runApp('C:/Users/Sam/Desktop/Bayes_Thm')
runApp('C:/Users/Sam/Desktop/Bayes_Thm')
runApp('C:/Users/Sam/Desktop/Bayes_Thm')
runApp('C:/Users/Sam/Desktop/Bayes_Thm')
x <- c(1,2,3,4,5)
y <- 2*x
plot(x,y)
grid(10,10)
plot.new()
plot.new
x <- c(1,2,3,4,5)
y <- 2*x
plot(x,y)
grid(10,10)
plot.new
x <- c(1,2,3,4,5)
y <- 2*x
plot(x,y)
grid(10,10)
x <- c(1:100)
y <- c(1:100)
plot(x,y)
grid(100,100)
z <-df(x,y)
?df
?data.frame
plot(14, 27)
?points
points(100, 100)
points(1:100, 1:100)
points(1, 1:100)
points(10, 1:100)
points(rep(10, 100), 1:100)
for (i in c(1:100)) {
points(rep(i, 100), 1:100)
}
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
plot(x = 1, y = 1,
xlim = c(0, 50),
ylim = c(0, 50),
xaxt="n",
yaxt="n",
ann=FALSE)
for (i in c(1:50)) {
points(1:50, rep(i, 50))
}
source('~/.active-rstudio-document', echo=TRUE)
plot(x = 1, y = 1,
xlim = c(0, 50),
ylim = c(0, 50),
xaxt="n",
yaxt="n",
ann=FALSE)
for (i in c(1:50)) {
points(1:50, rep(i, 50))
}
for (i in c(1:50)) {
for (j in c(1:50)) {
x <- rnorm()
if (x > 1.96 | x < -1.96) {
points(i, j, col = "red")
}
}
}
source('~/.active-rstudio-document', echo=TRUE)
points(i, j, pch = 19, col = "red")
source('~/.active-rstudio-document', echo=TRUE)
has_disease = data.frame(ncol = 2)
View(has_disease)
has_disease = data.frame(c(x, y))
View(has_disease)
source('~/.active-rstudio-document', echo=TRUE)
has_disease = data.frame(c("x", "y"))
View(has_disease)
x <- integer()
y <- integer()
has_disease <- data.frame(c(x, y))
View(has_disease)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
?while
?while
?while
)
?while
L
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
coords <- data.frame(c(x, y))
View(coords)
coords <- data.frame(x, y)
View(coords)
source('~/.active-rstudio-document', echo=TRUE)
for (i in length(x)) {
t_pos <- rnorm(1)
if (t_pos > -1.96) {
points(x[i], y[i], pch = 19, col = "purple")
}
}
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
length(x)
for (i in length(x)) {}
for (i in length(x)) {
print(i)}
for (i in length(x)) {print(i)}
for (i in lenth(x)) {
print(i)
}
for (i in length(x)) {
print(i)
}
for (i in 1:length(x)) {
t_pos <- rnorm(1)
if (t_pos > -1.96) {
points(x[i], y[i], pch = 19, col = "purple")
}
}
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
people <- data.frame(colnames(a, b))
people <- data.frame(a, b)
people <- data.frame(colnames <- (a, b))
?data.frame
people <- data.frame(NULL)
people <- data.frame(1,1)
View(people)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
View(people)
people <- data.frame(NULL)
source('~/.active-rstudio-document', echo=TRUE)
View(people)
library(dplyr)
nrow(merge(people, has_disease))
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
View(people)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
for (i in 1:length(x)) {
t_pos <- rnorm(1)
if (t_pos > -1.96) {
points(x[i], y[i], pch = 19, col = "purple")
}
}
View(has_disease)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
qnorm(.995)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('C:/Users/Sam/Desktop/Bayes_Thm/viz.R', echo=TRUE)
source('C:/Users/Sam/Desktop/Bayes_Thm/viz.R', echo=TRUE)
source('C:/Users/Sam/Desktop/Bayes_Thm/viz.R', echo=TRUE)
source('C:/Users/Sam/Desktop/Bayes_Thm/viz.R', echo=TRUE)
source('C:/Users/Sam/Desktop/Bayes_Thm/viz.R', echo=TRUE)
source('C:/Users/Sam/Desktop/Bayes_Thm/viz.R', echo=TRUE)
source('C:/Users/Sam/Desktop/Bayes_Thm/viz.R', echo=TRUE)
source('C:/Users/Sam/Desktop/Bayes_Thm/viz.R', echo=TRUE)
source('C:/Users/Sam/Desktop/Bayes_Thm/viz.R', echo=TRUE)
runApp('C:/Users/Sam/Desktop/Bayes_Thm')
source('C:/Users/Sam/Desktop/Bayes_Thm/viz.R', echo=TRUE)
source('C:/Users/Sam/Desktop/Bayes_Thm/viz.R', echo=TRUE)
source('C:/Users/Sam/Desktop/Bayes_Thm/viz.R', echo=TRUE)
source('C:/Users/Sam/Desktop/Bayes_Thm/viz.R', echo=TRUE)
source('C:/Users/Sam/Desktop/Bayes_Thm/viz.R', echo=TRUE)
source('C:/Users/Sam/Desktop/Bayes_Thm/viz.R', echo=TRUE)
source('C:/Users/Sam/Desktop/Bayes_Thm/viz.R', echo=TRUE)
runApp('C:/Users/Sam/Desktop/Bayes_Thm')
runApp('C:/Users/Sam/Desktop/Bayes_Thm')
runApp('C:/Users/Sam/Desktop/Bayes_Thm')
runApp('C:/Users/Sam/Desktop/Bayes_Thm')
source('C:/Users/Sam/Desktop/Bayes_Thm/viz.R', echo=TRUE)
source('C:/Users/Sam/Desktop/Bayes_Thm/viz.R', echo=TRUE)
source('C:/Users/Sam/Desktop/Bayes_Thm/viz.R', echo=TRUE)
source('C:/Users/Sam/Desktop/Bayes_Thm/viz.R', echo=TRUE)
source('C:/Users/Sam/Desktop/Bayes_Thm/viz.R', echo=TRUE)
source('C:/Users/Sam/Desktop/Bayes_Thm/viz.R', echo=TRUE)
source('C:/Users/Sam/Desktop/Bayes_Thm/viz.R', echo=TRUE)
source('C:/Users/Sam/Desktop/Bayes_Thm/viz.R', echo=TRUE)
source('C:/Users/Sam/Desktop/Bayes_Thm/viz.R', echo=TRUE)
source('C:/Users/Sam/Desktop/Bayes_Thm/viz.R', echo=TRUE)
source('C:/Users/Sam/Desktop/Bayes_Thm/viz.R', echo=TRUE)
legend(0, -2, legend = c("True Negative", "True Positive", "False Negative", "False Positive"),
horiz = TRUE, bty = "n", pch = 19, col = c("black", "green", "red", "blue"),
cex = c(0.25, 1.5, 1.5, 1.5))
source('C:/Users/Sam/Desktop/Bayes_Thm/viz.R', echo=TRUE)
source('C:/Users/Sam/Desktop/Bayes_Thm/viz.R', echo=TRUE)
source('C:/Users/Sam/Desktop/Bayes_Thm/viz.R', echo=TRUE)
runApp('C:/Users/Sam/Desktop/Bayes_Thm')
runApp('C:/Users/Sam/Desktop/Bayes_Thm')
runApp('C:/Users/Sam/Desktop/Bayes_Thm')
runApp('C:/Users/Sam/Desktop/Bayes_Thm')
shiny::runApp('C:/Users/Sam/Desktop/Bayes_Thm')
runApp('C:/Users/Sam/Desktop/Bayes_Thm')
runApp('C:/Users/Sam/Desktop/Bayes_Thm')
runApp('C:/Users/Sam/Desktop/Bayes_Thm')
runApp('C:/Users/Sam/Desktop/Bayes_Thm')
?img
runApp('C:/Users/Sam/Desktop/Bayes_Thm')
runApp('C:/Users/Sam/Desktop/Bayes_Thm')
source('C:/Users/Sam/Desktop/Bayes_Thm/viz.R', echo=TRUE)
source('C:/Users/Sam/Desktop/Bayes_Thm/viz.R', echo=TRUE)
source('C:/Users/Sam/Desktop/Bayes_Thm/viz.R', echo=TRUE)
source('C:/Users/Sam/Desktop/Bayes_Thm/viz.R', echo=TRUE)
source('C:/Users/Sam/Desktop/Bayes_Thm/viz.R', echo=TRUE)
source('C:/Users/Sam/Desktop/Bayes_Thm/viz.R', echo=TRUE)
source('C:/Users/Sam/Desktop/Bayes_Thm/viz.R', echo=TRUE)
source('C:/Users/Sam/Desktop/Bayes_Thm/viz.R', echo=TRUE)
source('C:/Users/Sam/Desktop/Bayes_Thm/viz.R', echo=TRUE)
source('C:/Users/Sam/Desktop/Bayes_Thm/viz.R', echo=TRUE)
source('C:/Users/Sam/Desktop/Bayes_Thm/viz.R', echo=TRUE)
source('C:/Users/Sam/Desktop/Bayes_Thm/viz.R', echo=TRUE)
runApp('C:/Users/Sam/Desktop/Bayes_Thm')
source('C:/Users/Sam/Desktop/Bayes_Thm/viz.R', echo=TRUE)
for (i in c(1:40)) {
for (j in c(1:25)) {
if (pick[(i*j)] > qnorm(1 - (10 / 1000))) { #input$infect
points(i, j, pch = 19, col = "red", cex = 2)
t_pos <- rnorm(1)
if (t_pos > qnorm(1 - .995)) { #input$r2
points(i, j, pch = 21, col = "blue", bg = "green", cex = 2)
}
}
else {
f_pos <- rnorm(1)
if (f_pos > qnorm(.995)) { #input$r1
points(i, j, pch = 19, col = "blue", cex = 2)
}
else {
points(i, j, pch = 19, col = "black", cex = 0.75)
}
}
}
}
for (i in c(1:40)) {
for (j in c(1:25)) {
if (pick[(i*j)] > qnorm(1 - (5 / 1000))) { #input$infect
points(i, j, pch = 19, col = "red", cex = 2)
t_pos <- rnorm(1)
if (t_pos > qnorm(1 - .995)) { #input$r2
points(i, j, pch = 21, col = "blue", bg = "green", cex = 2)
}
}
else {
f_pos <- rnorm(1)
if (f_pos > qnorm(.995)) { #input$r1
points(i, j, pch = 19, col = "blue", cex = 2)
}
else {
points(i, j, pch = 19, col = "black", cex = 0.75)
}
}
}
}
for (i in c(1:40)) {
for (j in c(1:25)) {
if (pick[(i*j)] > qnorm(1 - (10 / 1000))) { #input$infect
points(i, j, pch = 19, col = "red", cex = 2)
t_pos <- rnorm(1)
if (t_pos > qnorm(1 - .995)) { #input$r2
points(i, j, pch = 21, col = "blue", bg = "green", cex = 2)
}
}
else {
f_pos <- rnorm(1)
if (f_pos > qnorm(.995)) { #input$r1
points(i, j, pch = 19, col = "blue", cex = 2)
}
else {
points(i, j, pch = 19, col = "black", cex = 0.75)
}
}
}
}
source('C:/Users/Sam/Desktop/Bayes_Thm/viz.R', echo=TRUE)
shiny::runApp('C:/Users/Sam/Desktop/Bayes_Thm')
runApp('C:/Users/Sam/Desktop/Bayes_Thm')
runApp('C:/Users/Sam/Desktop/Bayes_Thm')
runApp('C:/Users/Sam/Desktop/Bayes_Thm')
library(shinyBS)
?bsButton
shiny::runApp('C:/Users/Sam/Desktop/Bayes_Thm')
for (i in c(1:40)) {
for (j in c(1:25)) {
print(i*j)
}
}
shiny::runApp('C:/Users/Sam/Desktop/Bayes_Thm')
shiny::runApp('C:/Users/Sam/Desktop/Bayes_Thm')
runApp('C:/Users/Sam/Desktop/Bayes_Thm')
runApp('C:/Users/Sam/Desktop/Bayes_Thm')
shiny::runApp('C:/Users/Sam/Desktop/Bayes_Thm')
runApp('C:/Users/Sam/Desktop/Bayes_Thm')
runApp('C:/Users/Sam/Desktop/Bayes_Thm')
runApp('C:/Users/Sam/Desktop/Bayes_Thm')
runApp('C:/Users/Sam/Desktop/Bayes_Thm')
runApp('C:/Users/Sam/Desktop/Bayes_Thm')
new code(dhdhdhdhdhdboobies)
enter boobies
list boobies
start with boobies
startwith(x,boobies)
shiny::runApp('C:/Users/Sam/Desktop/Bayes_Thm')
runApp('C:/Users/Sam/Desktop/Bayes_Thm')
runApp('C:/Users/Sam/Desktop/Bayes_Thm')
runApp('C:/Users/Sam/Desktop/Bayes_Thm')
runApp('C:/Users/Sam/Desktop/Bayes_Thm')
runApp('C:/Users/Sam/Desktop/Bayes_Thm')
runApp('C:/Users/Sam/Desktop/Bayes_Thm')
runApp('C:/Users/Sam/Desktop/Bayes_Thm')
runApp('C:/Users/Sam/Desktop/Bayes_Thm')
runApp('C:/Users/Sam/Desktop/Bayes_Thm')
"The probability of someone who <b>doesn't have</b> the disease testing negative for it."
runApp('C:/Users/Sam/Desktop/Bayes_Thm')
runApp('C:/Users/Sam/Desktop/Bayes_Thm')
runApp('C:/Users/Sam/Desktop/Bayes_Thm')
runApp('C:/Users/Sam/Desktop/Bayes_Thm')
runApp('C:/Users/Sam/Desktop/Bayes_Thm')
runApp('C:/Users/Sam/Desktop/Bayes_Thm')
runApp('C:/Users/Sam/Desktop/Bayes_Thm')
runApp('C:/Users/Sam/Desktop/Bayes_Thm')
runApp('C:/Users/Sam/Desktop/Bayes_Thm')
runApp('C:/Users/Sam/Desktop/Bayes_Thm')
shiny::runApp('C:/Users/Sam/Desktop/Bayes_Thm')
runApp('C:/Users/Sam/Desktop/Bayes_Thm')
runApp('C:/Users/Sam/Desktop/Bayes_Thm')
plot(cumsum(runif(n = 100)))
L = legend(x = 'bottom', legend = rep(NA,4), col=1:2, lty=c(1,1,2,2), ncol=2, bty='n', x.intersp=0.5, pch=c(1,2,1,2), inset=0.02)
legend(x = L$rect$left, y = L$rect$top, legend = c('Group A', 'Group B'), col=rep(NA,2), lty=c(1,1), ncol=1, x.intersp = 3, bg = NA)
source('C:/Users/Sam/Desktop/Bayes_Thm/viz.R', echo=TRUE)
plot(cumsum(runif(n = 100)))
L = legend(x = 'bottom', legend = rep(NA,5), col=1:2, lty=c(1,1,2,2), ncol=2, bty='n', x.intersp=0.5, pch=c(1,2,1,2), inset=0.02)
legend(x = L$rect$left, y = L$rect$top, legend = c('Group A', 'Group B'), col=rep(NA,2), lty=c(1,1), ncol=1, x.intersp = 3, bg = NA)
# draw legend with lines and point but without labels and box. x.intersp controls horizontal distance between lines
L = legend(x = 'bottom', legend = rep(NA,3), col=1:2, lty=c(1,1,2,2), ncol=2, bty='n', x.intersp=0.5, pch=c(1,2,1,2), inset=0.02)
# use position data of previous legend to draw legend with invisble lines and points but with labels and box. x.intersp controls distance between lines and labels
legend(x = L$rect$left, y = L$rect$top, legend = c('Group A', 'Group B'), col=rep(NA,2), lty=c(1,1), ncol=1, x.intersp = 3, bg = NA)
plot(cumsum(runif(n = 100)))
# draw legend with lines and point but without labels and box. x.intersp controls horizontal distance between lines
L = legend(x = 'bottom', legend = rep(NA,3), col=1:2, lty=c(1,1,2,2), ncol=2, bty='n', x.intersp=0.5, pch=c(1,2,1,2), inset=0.02)
# use position data of previous legend to draw legend with invisble lines and points but with labels and box. x.intersp controls distance between lines and labels
legend(x = L$rect$left, y = L$rect$top, legend = c('Group A', 'Group B'), col=rep(NA,2), lty=c(1,1), ncol=1, x.intersp = 3, bg = NA)
# draw legend with lines and point but without labels and box. x.intersp controls horizontal distance between lines
L = legend(x = 'bottom', legend = rep(NA,3), col=1:2, lty=c(2,1,2,2), ncol=2, bty='n', x.intersp=0.5, pch=c(1,2,1,2), inset=0.02)
plot(cumsum(runif(n = 100)))
# draw legend with lines and point but without labels and box. x.intersp controls horizontal distance between lines
L = legend(x = 'bottom', legend = rep(NA,4), col=1:2, lty=c(2,2,2,2), ncol=2, bty='n', x.intersp=0.5, pch=c(1,2,1,2), inset=0.02)
runApp('C:/Users/Sam/Desktop/Bayes_Thm')
runApp('C:/Users/Sam/Desktop/Bayes_Thm')
runApp('C:/Users/Sam/Desktop/Bayes_Thm')
runApp('C:/Users/Sam/Desktop/Bayes_Thm')
runApp('C:/Users/Sam/Desktop/Bayes_Thm')
runApp('C:/Users/Sam/Desktop/Bayes_Edit')
runApp('C:/Users/Sam/Desktop/Bayes_Edit')
runApp('C:/Users/Sam/Desktop/Bayes_Edit')
runApp('C:/Users/Sam/Desktop/Bayes_Edit')
runApp('C:/Users/Sam/Desktop/Bayes_Edit')
runApp('C:/Users/Sam/Desktop/Bayes_Edit')
runApp('C:/Users/Sam/Desktop/Bayes_Edit')
runApp('C:/Users/Sam/Desktop/Bayes_Edit')
runApp('C:/Users/Sam/Desktop/Bayes_Edit')
runApp('C:/Users/Sam/Desktop/Bayes_Edit')
runApp('C:/Users/Sam/Desktop/Bayes_Edit')
runApp('C:/Users/Sam/Desktop/Bayes_Edit')
runApp('C:/Users/Sam/Desktop/Bayes_Edit')
runApp('C:/Users/Sam/Desktop/Bayes_Edit')
runApp('C:/Users/Sam/Desktop/Bayes_Edit')
runApp('C:/Users/Sam/Desktop/Bayes_Edit')
runApp('C:/Users/Sam/Desktop/Bayes_Edit')
getwd()
setwd("C:/Users/Sam/Desktop/Bayes_Edit")
shiny::runApp()
shiny::runApp()
runApp()
shiny::runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
